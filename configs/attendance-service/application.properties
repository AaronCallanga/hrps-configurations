spring.application.name=attendance-service

server.port=4002

spring.datasource.username=${DB_USER:admin_user}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5002/db}
# Handled by Flyway
spring.jpa.hibernate.ddl-auto=none

# Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.bootstrap-servers=${KAFKA_URL:http://localhost:9094}
spring.kafka.properties.schema.registry.url=${SCHEMA_URL:http://localhost:8081}

# Important: Tell deserializer to return specific class (not a generic record)
spring.kafka.properties.specific.avro.reader=true

# Eureka
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka}
# Register with IP(127.0.0.1) instead of hostname(DESKTOP-xxxx.mshome.net)
eureka.instance.prefer-ip-address=true
# Stable unique ID
eureka.instance.instance-id=${spring.application.name}:${server.port}
# Container name in Docker environment so the DNS can be resolve by other services / gateway
eureka.instance.hostname=${HOSTNAME:localhost}